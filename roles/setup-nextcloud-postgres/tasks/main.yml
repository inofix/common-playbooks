
#TODO allow at least for a custom port


- name: Check whether the sample config is available
  stat:
    path: "{{ nextcloud__home }}/config/config.sample.php"
  register: nextcloud_sample_config_stat

- name: Fail if sample config was missing
  fail:
    msg: "Please verify manually: {{ nextcloud__home }}/config/config.sample.php was missing"
  when: not nextcloud_sample_config_stat.stat.exists

- name: Check whether the config is already done
  stat:
    path: "{{ nextcloud__config }}"
  register: nextcloud_config_stat

- name: Fail if config exists
  fail:
    msg: "Please verify manually: {{ nextcloud__config }} exists"
  when: nextcloud_config_stat.stat.exists

- name: Gather the passwords file from the host itself.
  shell: 'cat {{ account_store }}'
  register: accountsfile

- name: Parse the file for passwords.
  set_fact: 'accountinfos={{ accountsfile.stdout | from_yaml }}'

- name: create a db user for the nextcloud db
  become: True
  become_user: '{{ postgresql__user }}'
  postgresql_user:
    name: '{{ nextcloud__db_user }}'
    password: '{{ accountinfos[nextcloud__db_credentials_name]["value"] }}'
    encrypted: '{{ postgresql__encrypt_password }}'
  when:
    - postgresql__edit_db

- name: create a db for nextcloud
  become: True
  become_user: '{{ postgresql__user }}'
  postgresql_db:
    name: '{{ nextcloud__db_name }}'
    owner: '{{ nextcloud__db_user }}'
    encoding: UTF-8
    template: template0
  when:
    - postgresql__edit_db

#TODO verify that we may savely install the autoconfig again (for idempotency)
- name: Prepare for the automatical configuration of the installation
  template:
    src: "autoconfig.php.j2"
    dest: "{{ nextcloud__autoconfig }}"
    owner: "{{ nextcloud__user }}"
    group: "{{ nextcloud__group }}"
    mode: "0640"

# Config must be writeable for the installer it seems
- name: Prepare the Config
  file:
    state: touch
    dest: "{{ nextcloud__config }}"
    owner: "{{ nextcloud__user }}"
    group: "{{ nextcloud__group }}"
    mode: "0640"

# TODO needs both home and installation target dir
# Enable the installation
#- name: Enable nextcloud by setting the link for the webserver
#file:
#state: link

#### NOTE not working together with the autoconfig.php ...
#- name: install the default content
#  become: True
#  become_user: '{{ nextcloud__user }}'
#  command: 'php occ maintenance:install'
#  args:
#    chdir: '{{ nextcloud__home }}'

### TODO
#- name: 'Write a cron job to be run every 15 minutes'
#  cron:
#    name: 'nextcloud'
#    job: 'php {{ nextcloud__home }}/cron.php'
#    user: '{{ nextcloud__user }}'
#    minute: '4,19,34,49'
#    hour: '*'
#    day: '*'
#    month: '*'
#    weekday: '*'
